generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVE
  PENDING
  BLOCKED
  DISABLED
}

enum BookStatus {
  AVAILABLE
  LOST
  ARCHIVED
}

enum LoanStatus {
  ACTIVE
  RETURNED
  OVERDUE
  CANCELLED
}

model User {
  id               String     @id @default(cuid())
  email            String     @unique
  image            String?
  name             String?
  password         String
  role             UserRole   @default(USER)
  status           UserStatus @default(ACTIVE)
  isOnline         Boolean    @default(false)
  failedAttempts   Int        @default(0)
  lockedUntil      DateTime?
  lastLogin        DateTime?
  resetToken       String?
  resetTokenExpiry DateTime?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  sessions         Session[]
  Loans            Loan[]
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  ip        String? // IP donde se creó la sesión
  userAgent String? // Navegador o app
  revoked   Boolean  @default(false)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Book {
  id          String     @id @default(uuid())
  title       String
  author      String
  description String?
  isbn        String?    @unique
  coverImage  String?
  publishedAt DateTime?
  status      BookStatus @default(AVAILABLE)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Loans       Loan[]
}

model Loan {
  id         String     @id @default(cuid())
  userId     String
  user       User       @relation(fields: [userId], references: [id])
  bookId     String
  book       Book       @relation(fields: [bookId], references: [id])
  loanedAt   DateTime   @default(now())
  dueDate    DateTime
  returnedAt DateTime?
  status     LoanStatus @default(ACTIVE)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}
